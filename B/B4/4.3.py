import json
# импортируем модуль os
import os
# импортируем модуль uuid
import uuid

DATA_FILE_PATH = "users.json"


def read():
    """
    Читает JSON документ с диска
    """
    # проверяем наличие файла на диске
    if not os.path.exists(DATA_FILE_PATH):
        # возвращаем пустой список, если файл еще не создан
        return []

    # открываем файл на чтение
    with open(DATA_FILE_PATH) as fd:
        # загружаем JSON документ
        users = json.load(fd)
    # возвращаем список пользователей
    return users


def save(users):
    """
    Сохраняет список пользователей users в JSON файле на диск
    """
    # открываем файл на запись
    with open(DATA_FILE_PATH, "w") as fd:
        # сохраняем список пользователей на диск
        json.dump(users, fd)


def find(users):
    """
    Ищет среди списка пользователей users пользователя с заданным именем и возвращает его идентификатор. Если пользователь не найден, возвращает None.
    """
    name = input("Введи имя пользователя для поиска: ")
    # итерируемся по всем пользователям
    for user in users:
        # проверяем совпадение имени
        if user["first_name"] == name:
            # если имя совпало, возвращаем идентификатор пользователя
            return user["id"]


def request_data():
    """
    Запрашивает у пользователя данные и добавляет их в список users
    """
    # выводим приветствие
    print("Привет! Я запишу твои данные!")
    # запрашиваем у пользователя данные
    first_name = input("Введи своё имя: ")
    last_name = input("А теперь фамилию: ")
    email = input("Мне еще понадобится адрес твоей электронной почты: ")
    # генерируем идентификатор пользователя и сохраняем его строковое представление
    user_id = str(uuid.uuid4())
    # создаем словарь пользователя
    user = {
        "id": user_id,
        "first_name": first_name,
        "last_name": last_name,
        "email": email
    }
    # возвращаем созданного пользователя
    return user


def main():
    """
    Осуществляет взаимодействие с пользователем, обрабатывает пользовательский ввод
    """
    # читаем список сохранённых пользователей
    users_list = read()
    # просим пользователя выбрать режим
    mode = input("Выбери режим.\n1 - найти пользователя по имени\n2 - ввести данные нового пользователя\n")
    # проверяем режим
    if mode == "1":
        # выбран режим поиска, запускаем его
        user_id = find(users_list)
        if user_id:
            print("Найден пользователь с идентификатором: ", user_id)
        else:
            print("Такого пользователя нет.")
    elif mode == "2":
        user = request_data()
        # добавляем нового пользователя в список всех пользователей
        users_list.append(user)
        # сохраняем список пользователей
        save(users_list)
        print("Спасибо, данные сохранены!")
    else:
        print("Некорректный режим:(")


if __name__ == "__main__":
    main()
